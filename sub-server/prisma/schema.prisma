// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ENUM 정의
enum UserRole {
  ADMIN
  USER
  GUEST
}

// MODEL 정의
model User {
  id           Int               @id @unique @default(autoincrement())
  userId       String            @unique @map("user_id")
  password     String
  name         String?
  userSeq      String            @unique @map("user_seq")
  createdAt    DateTime          @default(now()) @map("created_at")
  updatedAt    DateTime          @updatedAt @map("updated_at")
  age          Int
  roles        UserRoleMapping[]
  refreshToken RefreshToken?

  @@map("HG_MB_USER")
}

model Role {
  id    Int               @id @unique @default(autoincrement())
  name  UserRole          @unique
  users UserRoleMapping[]

  @@map("HG_MB_ROLE")
}

model UserRoleMapping {
  id     Int  @id @unique @default(autoincrement())
  userId Int
  roleId Int
  user   User @relation(fields: [userId], references: [id])
  role   Role @relation(fields: [roleId], references: [id])

  @@map("HG_MB_USER_ROLE_MAPPING")
}

model EmailVerification {
  id         Int      @id @unique @default(autoincrement())
  userId     String   @unique @map("user_id")
  verifyCode String   @map("verify_code")
  validTime  DateTime @map("valid_time")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("HG_MB_EMAIL_VERIFICATION")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int      @unique @map("user_id")
  isRevoked Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      User     @relation(fields: [userId], references: [id])

  @@map("HG_MB_REFRESH_TOKEN")
}
